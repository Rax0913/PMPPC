<?xml version="1.0" encoding="utf-8"?>
<launch>
  <arg name="init_x" value="0.0"/>
  <arg name="init_y" value="0.0"/>
  <arg name="init_z" value="0.0"/> 
   <node name="rviz" pkg="rviz" type="rviz" output="screen"
    args="-d $(find pmppc_planner)/config/global_planning.rviz"> 
  </node>
  
  <node pkg="pmppc_planner" type="controlNode" name="control_node" output="screen">
  <rosparam file="$(find pmppc_planner)/config/pmppc_planning.yaml" command="load" />
  </node>

  <node pkg="mockamap" type="mockamap_node" name="mockamap_node" output="screen">
  <param name="seed" type="int" value="1024"/>
  <param name="update_freq" type="double" value="1.0"/>
  <param name="resolution" type="double" value="0.25"/>
  <param name="x_length" type="int" value="50"/>
  <param name="y_length" type="int" value="50"/>
  <param name="z_length" type="int" value="5"/>
  <param name="type" type="int" value="1"/>
  <param name="complexity"    type="double" value="0.025"/>
  <param name="fill"          type="double" value="0.3"/>
  <param name="fractal"       type="int"    value="1"/>
  <param name="attenuation"   type="double" value="0.1"/>
  <remap from="/mock_map" to="/voxel_map"/>
  </node>

  <!-- quadrotor sim -->
  <node pkg="so3_quadrotor_simulator" type="quadrotor_simulator_so3" name="quadrotor_simulator_so3" output="screen">
        <param name="rate/odom" value="200.0"/>
        <param name="simulator/init_state_x" value="$(arg init_x)"/>
        <param name="simulator/init_state_y" value="$(arg init_y)"/>
        <param name="simulator/init_state_z" value="$(arg init_z)"/>

        <remap from="~odom" to="/visual_slam/odom"/>
        <remap from="~cmd" to="so3_cmd"/>
        <remap from="~force_disturbance" to="force_disturbance"/>    
        <remap from="~moment_disturbance" to="moment_disturbance"/>        
  </node>
 
  <node pkg="nodelet" type="nodelet" args="standalone so3_control/SO3ControlNodelet" name="so3_control" required="true" output="screen">
        <param name="so3_control/init_state_x" value="$(arg init_x)"/>
        <param name="so3_control/init_state_y" value="$(arg init_y)"/>
        <param name="so3_control/init_state_z" value="$(arg init_z)"/>
        <remap from="~odom" to="/visual_slam/odom"/>
        <remap from="~position_cmd" to="/position_cmd"/>
        <remap from="~motors" to="motors"/>
        <remap from="~corrections" to="corrections"/>
        <remap from="~so3_cmd" to="so3_cmd"/>
        <rosparam file="$(find so3_control)/config/gains_hummingbird.yaml"/>
        <rosparam file="$(find so3_control)/config/corrections_hummingbird.yaml"/>
        <param name="mass" value="0.98"/>
        <param name="use_angle_corrections " value="false"/>
        <param name="use_external_yaw "      value="false"/>
        <param name="gains/rot/z" value="1.0"/>    
        <param name="gains/ang/z" value="0.1"/>        
  </node>
 
  <node pkg="odom_visualization" name="odom_visualization" type="odom_visualization" output="screen">
        <remap from="~odom" to="/visual_slam/odom"/>
        <param name="color/a" value="1.0"/>    
        <param name="color/r" value="0.0"/>        
        <param name="color/g" value="0.0"/>        
        <param name="color/b" value="0.0"/>       
        <param name="covariance_scale" value="100.0"/>       
        <param name="robot_scale" value="1.0"/>
        <param name="tf45" value="true"/>
  </node>

  <node pkg="local_sensing_node" type="pcl_render_node" name="pcl_render_node" output="screen">
        <rosparam command="load" file="$(find local_sensing_node)/params/camera.yaml" />
        <param name="sensing_horizon"  value="500.0" />
        <param name="sensing_rate"     value="30.0"/>
        <param name="estimation_rate"  value="30.0"/>

        <param name="map/x_size"     value="50.0"/>
        <param name="map/y_size"     value="50.0"/>
        <param name="map/z_size"     value="5.0"/>

        <remap from="~global_map" to="/map_generator/global_cloud"/>
        <remap from="~odometry"   to="/visual_slam/odom"/>
  </node>

  
  
  <node pkg="pmppc_planner" type="pmppc_main" name="global_planning_node" output="screen">
  <rosparam file="$(find pmppc_planner)/config/pmppc_planning.yaml" command="load" />
  </node>

</launch>
